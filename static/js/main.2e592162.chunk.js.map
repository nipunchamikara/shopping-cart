{"version":3,"sources":["Item.js","App.js","index.js"],"names":["Item","props","qty","item","incrementQty","increment","updateList","parseInt","Math","max","newQty","newList","items","map","index","updateItems","className","name","price","toLocaleString","style","currency","onClick","value","onChange","e","updateQty","target","App","useState","setItems","total","setTotal","grandTotal","reduce","calcTotal","itemList","id","ReactDOM","render","document","getElementById"],"mappings":"0LAEe,SAASA,EAAKC,GACzB,IAAMC,EAAMD,EAAME,KAAKD,IAGvB,SAASE,EAAaC,GAElBC,EADeC,SAAUF,EAAaH,EAAM,EAAIM,KAAKC,IAAIP,EAAM,EAAG,KActE,SAASI,EAAWI,GAEhB,IAAMC,EAAUV,EAAMW,MAAMC,KAAI,SAACV,EAAMW,GAInC,OAHIA,IAAUb,EAAMa,QAChBX,EAAKD,IAAMQ,GAERP,KAIXF,EAAMc,YAAYJ,GAGtB,OACI,sBAAKK,UAAU,eAAf,UACI,wCAAWf,EAAME,KAAKc,QACtB,yCAAYhB,EAAME,KAAKe,MAAMC,eAAe,QAAS,CAACC,MAAO,WAAYC,SAAU,WACnF,2CACA,sBAAKL,UAAU,MAAf,UACI,wBAAQA,UAAU,6BAA6BM,QAAS,kBAAMlB,GAAa,IAA3E,gBACA,uBAAOY,UAAU,YAAYO,MAAOrB,EAAKsB,SAAU,SAAAC,IA7B/D,SAAmBvB,IACH,KAARA,GAAcA,EAAM,KACpBA,EAAM,GAGVI,EADAJ,EAAMK,SAASL,IAyBkDwB,CAAUD,EAAEE,OAAOJ,UAC5E,wBAAQP,UAAU,8BAA8BM,QAAS,kBAAMlB,GAAa,IAA5E,mBAEJ,0CAAaH,EAAME,KAAKe,MAAQhB,GAAKiB,eAAe,QAAS,CAACC,MAAO,WAAYC,SAAU,cCzCxF,SAASO,IAGpB,MAA0BC,mBAAS,CAC/B,CAACZ,KAAM,iBAAkBC,MAAO,KAAMhB,IAAK,GAC3C,CAACe,KAAM,cAAeC,MAAO,KAAMhB,IAAK,GACxC,CAACe,KAAM,aAAcC,MAAO,IAAKhB,IAAK,KAH1C,mBAAOU,EAAP,KAAckB,EAAd,KAMA,EAA0BD,mBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAYA,SAASjB,EAAYJ,GACjBmB,EAASnB,GAVK,WACd,IAAMsB,EAAarB,EAAMsB,QAAO,SAACH,EAAO5B,GACpC,OAAO4B,EAAS5B,EAAKe,MAAQf,EAAKD,MACnC,GAEH8B,EAASC,GAMTE,GAGJ,IAAMC,EAAWxB,EAAMC,KAAI,SAACV,EAAMW,GAAP,OACvB,cAACd,EAAD,CAAkBc,MAAOA,EAAOX,KAAMA,EAAMS,MAAOA,EAAOG,YAAaA,GAA5DD,MAGf,OACI,sBAAKuB,GAAG,WAAWrB,UAAU,oDAA7B,UACI,oBAAIqB,GAAG,UAAP,2BACCD,EACD,qBAAIC,GAAG,aAAP,2BAAmCN,EAAMZ,eAAe,QAAS,CAACC,MAAO,WAAYC,SAAU,c,MC/B3GiB,IAASC,OAAO,cAACX,EAAD,IAASY,SAASC,eAAe,W","file":"static/js/main.2e592162.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Item(props) {\r\n    const qty = props.item.qty;\r\n\r\n    // Increment/decrement quantity\r\n    function incrementQty(increment) {\r\n        const newQty = parseInt((increment) ? qty + 1 : Math.max(qty - 1, 0));\r\n        updateList(newQty);\r\n    }\r\n\r\n    // Update quantity (from input field)\r\n    function updateQty(qty) {\r\n        if (qty === \"\" || qty < 0) {\r\n            qty = 0;\r\n        }\r\n        qty = parseInt(qty);\r\n        updateList(qty);\r\n    }\r\n\r\n    // Updates list\r\n    function updateList(newQty) {\r\n        // Creates newList with updated quantity\r\n        const newList = props.items.map((item, index) => {\r\n            if (index === props.index) {\r\n                item.qty = newQty;\r\n            }\r\n            return item;\r\n        })\r\n\r\n        // Update state\r\n        props.updateItems(newList);\r\n    }\r\n\r\n    return (\r\n        <div className=\"item rounded\">\r\n            <h4>Name: {props.item.name}</h4>\r\n            <h5>Price: {props.item.price.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})}</h5>\r\n            <h5>Quantity:</h5>\r\n            <div className=\"row\">\r\n                <button className=\"btn btn-primary col-2 left\" onClick={() => incrementQty(false)}>-1</button>\r\n                <input className=\"col-8 qty\" value={qty} onChange={e => {updateQty(e.target.value)}}/>\r\n                <button className=\"btn btn-primary col-2 right\" onClick={() => incrementQty(true)}>+1</button>\r\n            </div>\r\n            <h4>Total: {(props.item.price * qty).toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})}</h4>\r\n        </div>\r\n    );\r\n};","import React, { useState } from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nexport default function App() {\r\n\r\n    // Stores list of items as a state\r\n    const [items, setItems] = useState([\r\n        {name: \"Taco Seasoning\", price: 2.25, qty: 0},\r\n        {name: \"Pinto Beans\", price: 1.99, qty: 0},\r\n        {name: \"Sour Cream\", price: 3.5, qty: 0},\r\n    ]);\r\n\r\n    const [total, setTotal] = useState(0);\r\n\r\n    // Calculcates and updates total state\r\n    const calcTotal = () => {\r\n        const grandTotal = items.reduce((total, item) => {\r\n            return total + (item.price * item.qty);\r\n        }, 0);\r\n    \r\n        setTotal(grandTotal);\r\n    };\r\n\r\n    // Updates list and grand total\r\n    function updateItems(newList) {\r\n        setItems(newList);\r\n        calcTotal();\r\n    }\r\n\r\n    const itemList = items.map((item, index) => (\r\n        <Item key={index} index={index} item={item} items={items} updateItems={updateItems}/>\r\n    ))\r\n\r\n    return(\r\n        <div id=\"ItemList\" className=\"col-lg-6 offset-lg-3 col-md-8 offset-md-2 rounded\">\r\n            <h2 id=\"heading\">Shopping Cart</h2>\r\n            {itemList}\r\n            <h3 id=\"GrandTotal\">Grand Total = {total.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})}</h3>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}